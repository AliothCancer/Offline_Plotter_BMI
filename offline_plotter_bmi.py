# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'offline_plotter_bmi.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1382, 1050)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.plot_button = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("URW Gothic")
        font.setPointSize(15)
        self.plot_button.setFont(font)
        self.plot_button.setObjectName("plot_button")
        self.horizontalLayout.addWidget(self.plot_button)
        self.load_file_button = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("URW Gothic")
        font.setPointSize(15)
        self.load_file_button.setFont(font)
        self.load_file_button.setObjectName("load_file_button")
        self.horizontalLayout.addWidget(self.load_file_button)
        self.clear_graph_button = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("URW Gothic")
        font.setPointSize(14)
        self.clear_graph_button.setFont(font)
        self.clear_graph_button.setObjectName("clear_graph_button")
        self.horizontalLayout.addWidget(self.clear_graph_button)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("URW Gothic")
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.comboBox_files = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_files.sizePolicy().hasHeightForWidth())
        self.comboBox_files.setSizePolicy(sizePolicy)
        self.comboBox_files.setObjectName("comboBox_files")
        self.horizontalLayout.addWidget(self.comboBox_files)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout.addWidget(self.label_8)
        self.pen_width_slider = QtWidgets.QSlider(self.centralwidget)
        self.pen_width_slider.setMinimum(1)
        self.pen_width_slider.setMaximum(5)
        self.pen_width_slider.setPageStep(1)
        self.pen_width_slider.setProperty("value", 1)
        self.pen_width_slider.setOrientation(QtCore.Qt.Horizontal)
        self.pen_width_slider.setObjectName("pen_width_slider")
        self.horizontalLayout.addWidget(self.pen_width_slider)
        self.gridLayout.addLayout(self.horizontalLayout, 3, 1, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(10, 19, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 1, 2, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 6, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem3, 0, 1, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem4, 1, 0, 1, 1)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setMinimumSize(QtCore.QSize(1064, 255))
        font = QtGui.QFont()
        font.setFamily("URW Gothic")
        font.setPointSize(14)
        self.tabWidget.setFont(font)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("URW Gothic")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.tab.setFont(font)
        self.tab.setObjectName("tab")
        self.layoutWidget = QtWidgets.QWidget(self.tab)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 10, 1041, 203))
        self.layoutWidget.setObjectName("layoutWidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.checkBox_7 = QtWidgets.QCheckBox(self.layoutWidget)
        self.checkBox_7.setObjectName("checkBox_7")
        self.gridLayout_2.addWidget(self.checkBox_7, 4, 7, 1, 1, QtCore.Qt.AlignHCenter)
        self.label_4 = QtWidgets.QLabel(self.layoutWidget)
        self.label_4.setObjectName("label_4")
        self.gridLayout_2.addWidget(self.label_4, 1, 2, 1, 1, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignBottom)
        spacerItem5 = QtWidgets.QSpacerItem(82, 20, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem5, 1, 4, 1, 1)
        self.checkBox_9 = QtWidgets.QCheckBox(self.layoutWidget)
        self.checkBox_9.setObjectName("checkBox_9")
        self.gridLayout_2.addWidget(self.checkBox_9, 5, 11, 1, 1)
        self.frame_7 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_7.setMinimumSize(QtCore.QSize(30, 30))
        self.frame_7.setStyleSheet("background-color: rgb(14, 255, 0);")
        self.frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setObjectName("frame_7")
        self.gridLayout_2.addWidget(self.frame_7, 4, 9, 1, 1)
        self.checkBox_2 = QtWidgets.QCheckBox(self.layoutWidget)
        self.checkBox_2.setObjectName("checkBox_2")
        self.gridLayout_2.addWidget(self.checkBox_2, 3, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.comboBox_6 = QtWidgets.QComboBox(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_6.sizePolicy().hasHeightForWidth())
        self.comboBox_6.setSizePolicy(sizePolicy)
        self.comboBox_6.setObjectName("comboBox_6")
        self.gridLayout_2.addWidget(self.comboBox_6, 3, 8, 1, 1)
        self.checkBox_5 = QtWidgets.QCheckBox(self.layoutWidget)
        self.checkBox_5.setObjectName("checkBox_5")
        self.gridLayout_2.addWidget(self.checkBox_5, 2, 7, 1, 1, QtCore.Qt.AlignHCenter)
        self.label_3 = QtWidgets.QLabel(self.layoutWidget)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 1, 0, 1, 1, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignBottom)
        self.frame_4 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_4.setMinimumSize(QtCore.QSize(30, 30))
        self.frame_4.setStyleSheet("background-color: rgb(246, 211, 45);")
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.gridLayout_2.addWidget(self.frame_4, 5, 3, 1, 1)
        self.checkBox_3 = QtWidgets.QCheckBox(self.layoutWidget)
        self.checkBox_3.setObjectName("checkBox_3")
        self.gridLayout_2.addWidget(self.checkBox_3, 4, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.frame = QtWidgets.QFrame(self.layoutWidget)
        self.frame.setMinimumSize(QtCore.QSize(30, 30))
        self.frame.setStyleSheet("background-color: rgb(224, 27, 36);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_2.addWidget(self.frame, 2, 3, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.layoutWidget)
        self.label_5.setObjectName("label_5")
        self.gridLayout_2.addWidget(self.label_5, 1, 7, 1, 1, QtCore.Qt.AlignBottom)
        self.frame_3 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_3.setMinimumSize(QtCore.QSize(30, 30))
        self.frame_3.setStyleSheet("background-color: rgb(38, 162, 105);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_2.addWidget(self.frame_3, 4, 3, 1, 1)
        self.comboBox_7 = QtWidgets.QComboBox(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_7.sizePolicy().hasHeightForWidth())
        self.comboBox_7.setSizePolicy(sizePolicy)
        self.comboBox_7.setObjectName("comboBox_7")
        self.gridLayout_2.addWidget(self.comboBox_7, 4, 8, 1, 1)
        self.comboBox_8 = QtWidgets.QComboBox(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_8.sizePolicy().hasHeightForWidth())
        self.comboBox_8.setSizePolicy(sizePolicy)
        self.comboBox_8.setObjectName("comboBox_8")
        self.gridLayout_2.addWidget(self.comboBox_8, 5, 8, 1, 1)
        self.checkBox_8 = QtWidgets.QCheckBox(self.layoutWidget)
        self.checkBox_8.setObjectName("checkBox_8")
        self.gridLayout_2.addWidget(self.checkBox_8, 5, 7, 1, 1, QtCore.Qt.AlignHCenter)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem6, 5, 10, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.gridLayout_2.addItem(spacerItem7, 1, 9, 1, 1)
        self.checkBox_6 = QtWidgets.QCheckBox(self.layoutWidget)
        self.checkBox_6.setObjectName("checkBox_6")
        self.gridLayout_2.addWidget(self.checkBox_6, 3, 7, 1, 1, QtCore.Qt.AlignHCenter)
        self.frame_5 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_5.setMinimumSize(QtCore.QSize(30, 30))
        self.frame_5.setStyleSheet("background-color: rgb(255, 120, 0);")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.gridLayout_2.addWidget(self.frame_5, 2, 9, 1, 1)
        self.comboBox_5 = QtWidgets.QComboBox(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_5.sizePolicy().hasHeightForWidth())
        self.comboBox_5.setSizePolicy(sizePolicy)
        self.comboBox_5.setObjectName("comboBox_5")
        self.gridLayout_2.addWidget(self.comboBox_5, 2, 8, 1, 1)
        self.comboBox_4 = QtWidgets.QComboBox(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_4.sizePolicy().hasHeightForWidth())
        self.comboBox_4.setSizePolicy(sizePolicy)
        self.comboBox_4.setObjectName("comboBox_4")
        self.gridLayout_2.addWidget(self.comboBox_4, 5, 2, 1, 1)
        self.checkBox = QtWidgets.QCheckBox(self.layoutWidget)
        self.checkBox.setObjectName("checkBox")
        self.gridLayout_2.addWidget(self.checkBox, 2, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.frame_6 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_6.setMinimumSize(QtCore.QSize(30, 30))
        self.frame_6.setStyleSheet("background-color: rgb(145, 65, 172);")
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.gridLayout_2.addWidget(self.frame_6, 3, 9, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem8, 2, 5, 1, 1)
        self.comboBox = QtWidgets.QComboBox(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox.sizePolicy().hasHeightForWidth())
        self.comboBox.setSizePolicy(sizePolicy)
        self.comboBox.setObjectName("comboBox")
        self.gridLayout_2.addWidget(self.comboBox, 2, 2, 1, 1)
        self.checkBox_4 = QtWidgets.QCheckBox(self.layoutWidget)
        self.checkBox_4.setObjectName("checkBox_4")
        self.gridLayout_2.addWidget(self.checkBox_4, 5, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.frame_8 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_8.setMinimumSize(QtCore.QSize(30, 30))
        self.frame_8.setStyleSheet("background-color: rgb(71, 195, 167);")
        self.frame_8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_8.setObjectName("frame_8")
        self.gridLayout_2.addWidget(self.frame_8, 5, 9, 1, 1)
        self.frame_2 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_2.setMinimumSize(QtCore.QSize(30, 30))
        self.frame_2.setStyleSheet("background-color: rgb(26, 95, 180);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_2.addWidget(self.frame_2, 3, 3, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.layoutWidget)
        self.label_6.setObjectName("label_6")
        self.gridLayout_2.addWidget(self.label_6, 1, 8, 1, 1, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignBottom)
        self.comboBox_2 = QtWidgets.QComboBox(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_2.sizePolicy().hasHeightForWidth())
        self.comboBox_2.setSizePolicy(sizePolicy)
        self.comboBox_2.setObjectName("comboBox_2")
        self.gridLayout_2.addWidget(self.comboBox_2, 3, 2, 1, 1)
        self.comboBox_3 = QtWidgets.QComboBox(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_3.sizePolicy().hasHeightForWidth())
        self.comboBox_3.setSizePolicy(sizePolicy)
        self.comboBox_3.setObjectName("comboBox_3")
        self.gridLayout_2.addWidget(self.comboBox_3, 4, 2, 1, 1)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem9, 5, 12, 1, 1)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tab_2)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.scroll_velocity_label = QtWidgets.QLabel(self.tab_2)
        self.scroll_velocity_label.setObjectName("scroll_velocity_label")
        self.horizontalLayout_4.addWidget(self.scroll_velocity_label, 0, QtCore.Qt.AlignHCenter)
        self.scroll_velocity_slider = QtWidgets.QSlider(self.tab_2)
        self.scroll_velocity_slider.setMinimum(1)
        self.scroll_velocity_slider.setMaximum(100)
        self.scroll_velocity_slider.setProperty("value", 1)
        self.scroll_velocity_slider.setSliderPosition(1)
        self.scroll_velocity_slider.setOrientation(QtCore.Qt.Horizontal)
        self.scroll_velocity_slider.setObjectName("scroll_velocity_slider")
        self.horizontalLayout_4.addWidget(self.scroll_velocity_slider)
        self.gridLayout_5.addLayout(self.horizontalLayout_4, 1, 3, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(20, 33, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem10, 5, 2, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.values_quantity_label = QtWidgets.QLabel(self.tab_2)
        self.values_quantity_label.setObjectName("values_quantity_label")
        self.horizontalLayout_2.addWidget(self.values_quantity_label, 0, QtCore.Qt.AlignHCenter)
        self.values_quantity_slider = QtWidgets.QSlider(self.tab_2)
        self.values_quantity_slider.setMinimum(5)
        self.values_quantity_slider.setMaximum(2000)
        self.values_quantity_slider.setProperty("value", 100)
        self.values_quantity_slider.setOrientation(QtCore.Qt.Horizontal)
        self.values_quantity_slider.setObjectName("values_quantity_slider")
        self.horizontalLayout_2.addWidget(self.values_quantity_slider)
        self.gridLayout_5.addLayout(self.horizontalLayout_2, 4, 3, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_5.addItem(spacerItem11, 2, 2, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem12, 0, 2, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.tab_2)
        self.label_10.setObjectName("label_10")
        self.gridLayout_5.addWidget(self.label_10, 4, 2, 1, 1)
        spacerItem13 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem13, 3, 2, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.tab_2)
        self.label_2.setObjectName("label_2")
        self.gridLayout_5.addWidget(self.label_2, 1, 2, 1, 1, QtCore.Qt.AlignRight)
        self.gridLayout_4.addLayout(self.gridLayout_5, 2, 2, 1, 1)
        self.scrolling_slider = QtWidgets.QSlider(self.tab_2)
        self.scrolling_slider.setOrientation(QtCore.Qt.Horizontal)
        self.scrolling_slider.setObjectName("scrolling_slider")
        self.gridLayout_4.addWidget(self.scrolling_slider, 1, 0, 1, 1)
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem14, 4, 0, 1, 1)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_30 = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setFamily("URW Gothic")
        font.setPointSize(14)
        self.label_30.setFont(font)
        self.label_30.setObjectName("label_30")
        self.verticalLayout_4.addWidget(self.label_30)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.play_button = QtWidgets.QPushButton(self.tab_2)
        self.play_button.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../.designer/backup/next.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.play_button.setIcon(icon)
        self.play_button.setObjectName("play_button")
        self.horizontalLayout_3.addWidget(self.play_button)
        self.pause_button = QtWidgets.QPushButton(self.tab_2)
        self.pause_button.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../../.designer/backup/pause.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pause_button.setIcon(icon1)
        self.pause_button.setObjectName("pause_button")
        self.horizontalLayout_3.addWidget(self.pause_button)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.gridLayout_3.addLayout(self.verticalLayout_4, 4, 3, 1, 1)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_29 = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setFamily("URW Gothic")
        font.setPointSize(14)
        self.label_29.setFont(font)
        self.label_29.setObjectName("label_29")
        self.verticalLayout_5.addWidget(self.label_29)
        self.back_button = QtWidgets.QPushButton(self.tab_2)
        self.back_button.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.back_button.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../../.designer/backup/next-button_Rotated.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.back_button.setIcon(icon2)
        self.back_button.setObjectName("back_button")
        self.verticalLayout_5.addWidget(self.back_button)
        self.gridLayout_3.addLayout(self.verticalLayout_5, 4, 1, 1, 1)
        spacerItem15 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem15, 6, 1, 1, 1)
        spacerItem16 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem16, 4, 4, 1, 1)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_7 = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setFamily("URW Gothic")
        font.setPointSize(14)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.verticalLayout_6.addWidget(self.label_7)
        self.forward_button = QtWidgets.QPushButton(self.tab_2)
        self.forward_button.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("../../.designer/backup/next-button.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.forward_button.setIcon(icon3)
        self.forward_button.setObjectName("forward_button")
        self.verticalLayout_6.addWidget(self.forward_button)
        self.gridLayout_3.addLayout(self.verticalLayout_6, 4, 5, 1, 1)
        spacerItem17 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem17, 4, 2, 1, 1)
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem18, 4, 7, 1, 1)
        self.gridLayout_4.addLayout(self.gridLayout_3, 2, 0, 1, 1)
        self.line = QtWidgets.QFrame(self.tab_2)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_4.addWidget(self.line, 2, 1, 1, 1)
        spacerItem19 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_4.addItem(spacerItem19, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab_2, "")
        self.gridLayout.addWidget(self.tabWidget, 5, 1, 1, 1)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_5.addWidget(self.label_9)
        self.signals_listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.signals_listWidget.setObjectName("signals_listWidget")
        self.horizontalLayout_5.addWidget(self.signals_listWidget)
        self.gridLayout.addLayout(self.horizontalLayout_5, 6, 1, 1, 1)
        self.graphicsView = PlotWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphicsView.sizePolicy().hasHeightForWidth())
        self.graphicsView.setSizePolicy(sizePolicy)
        self.graphicsView.setMinimumSize(QtCore.QSize(0, 600))
        font = QtGui.QFont()
        font.setFamily("URW Gothic")
        self.graphicsView.setFont(font)
        self.graphicsView.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.graphicsView.setObjectName("graphicsView")
        self.gridLayout.addWidget(self.graphicsView, 1, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1382, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.thread = {}
    
        self.comboBox_files.addItem("None")
    
        # SLIDER CONNECTION
        self.sliders = {
            self.scroll_velocity_slider: self.scroll_velocity_label,
            self.values_quantity_slider: self.values_quantity_label
        }
        for slider in self.sliders:
            slider.valueChanged.connect(self.update_sliders)
    
        # LABEL
        self.scroll_velocity_label.setText(str(self.scroll_velocity_slider.value()))
        self.values_quantity_label.setText(str(self.values_quantity_slider.value()))
        # QtWidgets.QLabel.setText()
    
        self.scrolling_slider.valueChanged.connect(self.update_scrolling)
        self.values_quantity_slider.valueChanged.connect(self.update_zoom)
    
        # BUTTON CONNECTION
        self.load_file_button.clicked.connect(self.load_file)
        self.plot_button.clicked.connect(self.plot)
        self.clear_graph_button.clicked.connect(self.clear_graph)
        self.play_button.clicked.connect(self.play_thread)
        self.pause_button.clicked.connect(self.pause_thread)
    
        # comboBox_files signal connection
        self.comboBox_files.currentIndexChanged.connect(self.update_comboBox_options)
    
        # show grid on ptqtgraph graph x,y
        self.graphicsView.showGrid(True, True)
    
        # self.files will contains file names as keys and lists of str column names as values
        # self.files = {
        #      file_name: [column1,column2,...]}
        # VARIABLES
        self.play_isRunning = False
        self.files = {}
        self.data = []
        self.current_file_name = ""
        self.graphs = []
        self.pens = []
        self.file_and_columns_plotted = {}
        self.pen_width = 3
    
        # self.x_scroll = []
        self.y = []
        self.init_value = 0
    
        self.comboBoxes = [
            self.comboBox,
            self.comboBox_2,
            self.comboBox_3,
            self.comboBox_4,
            self.comboBox_5,
            self.comboBox_6,
            self.comboBox_7,
            self.comboBox_8
        ]
    
        self.checkBoxes = [
            self.checkBox,
            self.checkBox_2,
            self.checkBox_3,
            self.checkBox_4,
            self.checkBox_5,
            self.checkBox_6,
            self.checkBox_7,
            self.checkBox_8
        ]
    
        self.checkBox_9.stateChanged.connect(lambda: self.show_all_signals(self.checkBox_9))
    
        self.colors = [
            (224, 27, 36),  # signal1
            (26, 95, 180),
            (38, 162, 105),
            (246, 211, 45),
            (255, 120, 0),
            (145, 65, 172),
            (14, 255, 0),
            (71, 195, 167)  # signal8
        ]
    
        # NORMAL FUNCTIONS
    
    
    def update_sliders(self):
        for slider in self.sliders:
            new_value = slider.value()
            self.sliders[slider].setText(str(new_value))
    
    
    def show_all_signals(self, QCheckBox):
        for i in self.checkBoxes:
            if i.isChecked() == False:
                i.setChecked(True)
            else:
                i.setChecked(False)
    
    
    def load_file(self):
        # getting the file name
        options = QFileDialog.Options()
    
        try:
            self.current_file_name = repr(QFileDialog.getOpenFileName(self, "QFileDialog.getOpenFileNames()", "Load a file",
                                                                      "csv File (*.csv);;All Files (*)", options=options)[
                                              0]).strip("'")
    
            exit_load_file = False
            if self.current_file_name in self.files.keys():
                msg = QMessageBox()
                msg.setWindowTitle("Action not allowed")
                msg.setText("This file is already loaded")
                msg.exec_()
    
                exit_load_file = True
    
        except FileNotFoundError or KeyError:
            msg = QMessageBox()
            msg.setWindowTitle("::FileNotFoundError::")
            msg.setText("!!!")
            msg.exec_()
            exit_load_file = True
    
        if not exit_load_file:
            self.update_comboBox_options()
    
    
    def clear_graph(self):
        self.y = []
        self.graphicsView.clear()
        self.graphs = []
        self.pens = []
        self.init_value = 0
        self.file_and_columns_plotted.clear()
        self.signals_listWidget.clear()
    
    
    def plot(self):
        self.current_file_name = self.comboBox_files.currentText()
        print(self.current_file_name)
    
        if self.current_file_name not in self.file_and_columns_plotted.keys():
            self.file_and_columns_plotted[self.current_file_name] = []
    
        for n in range(len(self.comboBoxes)):
    
            if self.checkBoxes[n].checkState() and self.comboBoxes[n].count() != 0:
                self.y = []
                column = self.comboBoxes[n].currentText()
                if column not in self.file_and_columns_plotted[self.current_file_name]:
                    self.file_and_columns_plotted[self.current_file_name].append(column)
                # print(column)
                self.data = get_data(self.current_file_name, column)
    
                # adjusting sliders size based on data length
    
                max_length = len(self.data)
                self.scrolling_slider.setMaximum(max_length)
                self.scroll_velocity_slider.setMaximum(int(max_length * 0.05))
                self.values_quantity_slider.setMaximum(int(max_length * 0.8))
                # QtWidgets.QSlider.setMaximum()
    
                for i in self.data:
                    self.y.append(i)
                # print(y)
                color = QColor(
                    self.colors[n][0],
                    self.colors[n][1],
                    self.colors[n][2],
                )
                self.pen_width = self.pen_width_slider.value()
                pen = pg.mkPen(color, width=self.pen_width)
                self.graphs.append(self.graphicsView.plot(self.y, pen=pen))
                self.pens.append(pen)
    
                self.graphicsView.setAutoVisible(y=1)
                self.graphicsView.setAutoVisible(x=1)
                self.graphicsView.enableAutoRange(axis='y', enable=True)
                self.graphicsView.enableAutoRange(axis='x', enable=True)
    
                self.signals_listWidget.clear()
                for file_name in self.file_and_columns_plotted:
    
                    plotted_columns = str(self.file_and_columns_plotted[file_name])
    
                    match platform.uname()[0]:
                        case "Linux" | "Darwin":
                            item = file_name.split("/")[-1] + ": " + plotted_columns
                        case "Windows":
                            item = file_name.split("\\")[-1] + ": " + plotted_columns
    
                    if file_name == self.comboBox_files.currentText():
                        self.signals_listWidget.addItem(item)
    
                    else:
                        self.signals_listWidget.addItem(item)
    
            else:
                try:
                    self.file_and_columns_plotted[self.current_file_name].remove(self.comboBoxes[n].currentText())
                except ValueError:
                    pass
                print("checkbox not clicked")
    
    
    def delete_all_comboBoxes_items(self):
        for combo in self.comboBoxes:
            combo.clear()
    
    
    def update_comboBox_options(self):
        # delete all comboBox items
        self.delete_all_comboBoxes_items()
    
        # adding filename and columns to self.files dict
        # print(self.current_file_name)
        columns = get_columns(self.current_file_name)
        self.files[self.current_file_name] = columns
    
        # adding the file name to the files combobox
        for n, file_name in enumerate(self.files):
            if n == 0:
                self.comboBox_files.setItemText(n, file_name)
            elif self.comboBox_files.count() == len(self.files):
                pass
            else:
                self.comboBox_files.addItem(file_name)
    
        # adding all columns of loaded files
        # self.files = {
        #      file_name: [column1,column2,...]}
        self.update_selected_file()
        for n, comboBox in enumerate(self.comboBoxes):
            for k, item in enumerate(self.files[self.current_file_name]):
                if k == n:
                    comboBox.addItem(item)
    
        for comboBox in self.comboBoxes:
            for item in self.files[self.current_file_name]:
                if comboBox.currentText() != item:
                    comboBox.addItem(item)
    
    
    def update_selected_file(self):
        self.current_file_name = repr(self.comboBox_files.currentText()).strip("'")
    
        # AUTOMATIC GRAPH SCROLLER
        # THREAD FUNCTIONS
    
    
    def play_thread(self):
        self.play_isRunning = True
        self.thread[1] = ThreadClass(parent=None, index=1)
        self.thread[1].start()
        self.thread[1].any_signal.connect(self.my_function)
        self.play_button.setEnabled(False)
    
    
    def update_scrolling(self):
        # self.pause_thread()
        if self.play_isRunning:
            self.init_value = self.scrolling_slider.value() - self.values_quantity_slider.value()
        else:
            self.init_value = self.scrolling_slider.value() - self.values_quantity_slider.value()
            intervall_lenght = int(self.values_quantity_label.text())
            # QtWidgets.QLabel.text()
    
            end_value = self.init_value + intervall_lenght
            print(self.init_value)
            self.graphicsView.setXRange(self.init_value, end_value)
            self.scrolling_slider.setValue(int(self.init_value + self.values_quantity_slider.value()))
            self.pen_width = self.pen_width_slider.value()
    
            for n, graph in enumerate(self.graphs):
                self.graphicsView.plot(graph.yData, pen=self.pens[n])
        # self.play_thread()
    
    
    def update_zoom(self):
        # self.scrolling_slider.setMinimum(self.scrolling_slider.value())
    
        intervall_lenght = int(self.values_quantity_label.text())
        # QtWidgets.QLabel.text()
    
        end_value = self.init_value + intervall_lenght
    
        self.graphicsView.setXRange(self.init_value, end_value)
        self.scrolling_slider.setValue(int(self.init_value + self.values_quantity_slider.value()))
        self.pen_width = self.pen_width_slider.value()
    
        for n, graph in enumerate(self.graphs):
            self.graphicsView.plot(graph.yData, pen=self.pens[n])
    
    
    def play(self):
        self.graphicsView.clear()
    
        # self.update_xy()
        if self.graphs != []:
            # self.graph.setYRange(min(self.y), max(self.y))
            intervall_lenght = int(self.values_quantity_label.text())
            # QtWidgets.QLabel.text()
    
            end_value = self.init_value + intervall_lenght
    
            self.graphicsView.setXRange(self.init_value, end_value)
            self.init_value += int(self.scroll_velocity_label.text()) * 0.15
            self.scrolling_slider.setValue(int(self.init_value + self.values_quantity_slider.value()))
            self.pen_width = self.pen_width_slider.value()
    
            for n, graph in enumerate(self.graphs):
                self.graphicsView.plot(graph.yData, pen=self.pens[n])
    
                # pyqtgraph.PlotDataItem.
            if self.init_value + self.values_quantity_slider.value() >= self.scrolling_slider.maximum():
                self.pause_thread()
                self.init_value = 0
    
    
    def pause_thread(self):
        self.play_isRunning = False
        self.thread[1].stop()
        self.play_button.setEnabled(True)
    
        # here you can add other thread        
    
    
    def my_function(self):
        index = self.sender().index
        if index == 1:  # play
            self.play()
        
    
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.plot_button.setText(_translate("MainWindow", "Plot"))
        self.load_file_button.setText(_translate("MainWindow", "Load a file"))
        self.clear_graph_button.setText(_translate("MainWindow", "Clear graph"))
        self.label.setText(_translate("MainWindow", "Loaded file:"))
        self.label_8.setText(_translate("MainWindow", "Pen Width:"))
        self.tabWidget.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.checkBox_7.setText(_translate("MainWindow", "Signal7"))
        self.label_4.setText(_translate("MainWindow", "Column:"))
        self.checkBox_9.setText(_translate("MainWindow", "Show/Hide all available"))
        self.checkBox_2.setText(_translate("MainWindow", "Signal2"))
        self.checkBox_5.setText(_translate("MainWindow", "Signal5"))
        self.label_3.setText(_translate("MainWindow", "Show/Hidden:"))
        self.checkBox_3.setText(_translate("MainWindow", "Signal3"))
        self.label_5.setText(_translate("MainWindow", "Show/Hidden:"))
        self.checkBox_8.setText(_translate("MainWindow", "Signal8"))
        self.checkBox_6.setText(_translate("MainWindow", "Signal6"))
        self.checkBox.setText(_translate("MainWindow", "Signal1"))
        self.checkBox_4.setText(_translate("MainWindow", "Signal4"))
        self.label_6.setText(_translate("MainWindow", "Column:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Signals to plot"))
        self.scroll_velocity_label.setText(_translate("MainWindow", "5"))
        self.values_quantity_label.setText(_translate("MainWindow", "5"))
        self.label_10.setText(_translate("MainWindow", "Set visible value quantity:"))
        self.label_2.setText(_translate("MainWindow", "Set scrolling velocity:"))
        self.label_30.setText(_translate("MainWindow", "     Play             Pause   "))
        self.label_29.setText(_translate("MainWindow", "Backward"))
        self.label_7.setText(_translate("MainWindow", "Forward"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Automatic graph scroller"))
        self.label_9.setText(_translate("MainWindow", "Plotted signals:"))
from pyqtgraph import PlotWidget


class ThreadClass(QtCore.QThread):

    any_signal = QtCore.pyqtSignal(int)

    def __init__(self, parent=None, index=0):

        super(ThreadClass, self).__init__(parent)
        self.index=index
        self.is_running = True

    def run(self):
        print('Starting thread...',self.index)
        cnt = 0
        while True:
            cnt += 1
            if cnt == 99:
                cnt = 0
            time.sleep(0.1)
            self.any_signal.emit(cnt)

    def stop(self):
        self.is_running = False
        print('Stopping thread...', self.index)
        self.terminate()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
